from SHA1_quasi_collision import encrypt, b1, b2
from DSA import sign, generate_key, authenticate
from largePrimes import pp, qq, nBitRandom
import random


zadnja_vrstica_prejsnjega_bloka = '000000052fe0fe02b97e0b725e1ca95b75ab8f13'

(p, q, g, y, x) = generate_key(pp, qq)
r, s = sign('{} {}'.format(b1, b2), p, q, g, y, x)

row_1 = '{} {} {}'.format(b1, b2, int(encrypt('{} {}'.format(b1, b2)), 16))
row_2 = 'IzakJenko {} {}'.format(r, s)
row_3 = zadnja_vrstica_prejsnjega_bloka

print('BLOK','\n')
print(row_1)
print(row_2)
print(row_3)

### Manjša skripta ###
# [ bšs se lahko zakomentira, ustrezne vrednosti za row_4 in row_5 sta že izračunani spodaj ]
# poiščemo tako četrto vrstico da bo sha-1 uporabljen na prvih štirih vrsticah vrnil hash vrednost, ki se začne s sedmimi ničlami.

# row_4 = str(nBitRandom(32))
# m = '{}\n{}\n{}\n{}'.format(row_1, row_2, row_3, row_4)

# while encrypt(m)[:7] != '0000000':
#     row_4 = str(nBitRandom(32))
#     m = '{}\n{}\n{}\n{}'.format(row_1, row_2, row_3, row_4)

# row_5 = encrypt(m)

###     konec      ###


# Ti dve vrstici sem dobil iz zgornje while zanke
row_4 = '2782570156'
row_5 = '00000003a3d77fdc0f6e4492275acc8e08740f5e'

print(row_4)
print(row_5)

# to je niz ki ga sha-1 preslika v 00000003a3d77fdc0f6e4492275acc8e08740f5e
m = '3566083232 2314639948 1331457644987023306915329595383178299443741746176\nIzakJenko 1142577795190654443520389728578545917931944978949 233323764178989057792929024652847273416340521174\n000000052fe0fe02b97e0b725e1ca95b75ab8f13\n2782570156'

# to je naslednji blok v našem blockchainu (v trenutku oddaje rešitev...)
my_block = '3566083232 2314639948 1331457644987023306915329595383178299443741746176\nIzakJenko 1142577795190654443520389728578545917931944978949 233323764178989057792929024652847273416340521174\n000000052fe0fe02b97e0b725e1ca95b75ab8f13\n2782570156\n00000003a3d77fdc0f6e4492275acc8e08740f5e'

# to je javni ključ, ki spada na vrh
public_key = 'IzakJenko\n{}\n{}\n{}\n{}'.format(p, q, g, y)


authenticate(
    'Z0937JWF3Y RXHWC7HK61',
    785030340999481157385432616722239822785303833906,
    240454202397062768301123300943476338875073295047,
    134226334806531566144939363414996013592146935317165243101107877021059587142894410128454597281124142432409347455571805684659305652994628648466368517639133531493276781652940283183815598819406815869157194794256326263160958848203586628430086161095152405791442845968434628824961624366146653705683796473716832217253,
    842961961751267027830557415532250905115960773477,
    60327369698725436238109894913012986229497757943109628154047716389424233089340868922847332896845041150481554068866784353085613931508290773979924834719451215161690953241055473104234332359168890449482975670093579928324316195041300022881776545943594924584393379043600479426422183312406756297269493520238718387858,
    58501550488508801159862762962224010408701127167304554321102475559323547645866265557809222603881228751706280180893875482687666586282052954306195397685993576838009061314190239703433675001637379417974861293153553227324159061344502505752639059465851379806784407637981283396952404071587113528212454692994466427656
    )

authenticate(
    '6925873 8859787',
    144611386153213543152558391173498581162733172614,
    53949601242053405784223808321306429753065482548,
    89884656743115795386465259539451236680898848947115328636715040578866337902750481566354238661203768010560056939935696678829394884407208311246423715319737062188883946712432742638151109800623047059726541476042502884419075341171231440736956555270413618581675256392065975078358590274162985776308007677045373509643,
    930750818665451459101842416358141509827966271789,
    36371844372562435329530649297677015649430550166607185229520026456898386623711161478312370283216983350266873023552188128524112054298813791372302485624614389317537024555211151331449445903600085641126256697906822831865761361063958448982573907975674822743820121716913285925151413698607253183824377004759090644364,
    30014357713455374953911749968797972972579425145097555303844930682383931988470626992324876552872192732588552277640683395246309170587074048787457019421548379732811284069893366530565081109681811546532267555523383683745237171472532837142419789143213499784112639289098410365502627572465381601426598498902918685101
)